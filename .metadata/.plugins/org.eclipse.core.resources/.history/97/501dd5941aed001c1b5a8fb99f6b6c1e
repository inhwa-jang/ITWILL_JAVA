package exception;

public class Ex3 {

	public static void main(String[] args) {
		/*
		 * 예외 처리의 위임(전달)
		 * - 예외가 발생한 곳에서 try ~ catch 블록으로 직접 처리할 수 있찌만
		 *   자신이 직접 처리하지 않고, 메서드 호출한 곳으로 예외 위임 가능
		 * - throws 키워드를 사용
		 * - 예외 처리를 위임받은 메서드는 다시 예외 처리에 대한 책임이 발생하며
		 *   직접 처리하거나 또 다른 곳으로 위임 가능
		 * - 최종적으로 마지막 단계의 메서드에서는 try ~ catch 블록을 사용하여
		 *   예외를 직접 처리해야 함! (ex. main() 메서드)
		 * - throws 키워드를 사용하여 지정하는 예외는 1개 또는 복수개 지정 가능
		 * 
		 * < 예외 위임 기본 문법 >
		 * - 메서드 정의 시 메서드 선언부 마지막에 throws 키워드를 쓰고
		 *   뒤에 예외를 위임할 클래스명을 기술(복수개일 경우 콤마로 구분)
		 * [접근제한자] 리턴타입 메서드명([파라미터...]) throws 예외클래스명... {
		 * 			// 예외가 발생하는 코드...
		 * }
		 */
		
		//
		팀장();

	} // main() 메서드 끝
	
	public static void 팀장() {
		
		대리();
	}
	
	public static void 대리() {
		
		사원();
		사원2();
	}
	
	public static void 사원() {
		
		System.out.println("사원에서 예외 발생!");
		System.out.println(3 / 0); // ArithmeticException 예외 발생하는 코드
	}
	
	public static void 사원2() {
		
	}

} // EX3 클래스 끝









